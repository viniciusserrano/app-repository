spring.application.name=api-imobiliaria

# MongoDB Atlas
spring.data.mongodb.uri=mongodb+srv://viniciusgomesserrano:wvHHKdqJGTgYJCyI@cluster0.k2iwn.mongodb.net/db?retryWrites=true&w=majority

# LOCAL
endereco.servic# --------------------------------------------------
# Identificação da aplicação
# --------------------------------------------------
spring.application.name=api-imobiliaria

# --------------------------------------------------
# Conexão com MongoDB (Atlas)
# --------------------------------------------------
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI}

# --------------------------------------------------
# URL do serviço de Endereço (Feign)
# --------------------------------------------------
# ambiente local (descomente para dev)
# endereco.service.url=http://localhost:8088

# produção (Render, Kubernetes, etc)
endereco.service.url=${ENDERECO_SERVICE_URL}

# --------------------------------------------------
# Actuator
# --------------------------------------------------
# expõe somente esses endpoints
management.endpoints.web.exposure.include=health,info,prometheus,httptrace,metrics
# caminho base customizado
management.endpoints.web.base-path=/actuator
# habilita o exportador Prometheus
management.endpoint.prometheus.enabled=true

# tag padrão para todas as métricas
management.metrics.tags.application=${spring.application.name}

# --------------------------------------------------
# Métricas de servidor HTTP (http.server.requests)
# --------------------------------------------------
# garante que estão habilitadas
management.metrics.enable.http.server.requests=true
# gera histogramas
management.metrics.distribution.histogram.http.server.requests=true
# percentis P50/P95/P99
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99

# --------------------------------------------------
# Métricas de cliente HTTP (http.client.requests) ? Feign
# --------------------------------------------------
# habilita metrificação do cliente
management.metrics.enable.http.client.requests=true
# gera histogramas para cada chamada Feign
management.metrics.distribution.histogram.http.client.requests=true
# percentis P50/P95/P99
management.metrics.distribution.percentiles.http.client.requests=0.5,0.95,0.99

# ativa o Observability (que inclui métricas de Feign)
spring.observability.enabled=true

# (opcional) nome para seus clientes Feign
spring.observability.client.name.api-endereco=api-endereco
e.url=http://localhost:8088

# PROD
# endereco.service.url=${ENDERECO_SERVICE_URL}


#logging.level.com.br.imobiliaria.api.imovel.repository.dao.ImovelCriteriaRepository=TRACE
#logging.level.org.springframework.data.mongodb.core.MongoTemplate=TRACE
#logging.level.org.springframework.data.mongodb.core.convert.MappingMongoConverter=TRACE

# exposição de todos os endpoints do actuator
management.endpoints.web.exposure.include=health,info,prometheus,httptrace,metrics

# path customizado (opcional)
management.endpoint.prometheus.enabled=true
management.endpoints.web.base-path=/actuator
management.metrics.tags.application=api-imobiliaria

# Habilita buckets de histograma para http.server.requests
management.metrics.distribution.histogram.http.server.requests=true

# (Opcional) Definir percentis pré-calculados
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99



